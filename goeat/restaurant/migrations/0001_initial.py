# Generated by Django 3.2.3 on 2021-12-13 13:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_name', models.CharField(max_length=100)),
                ('menu_image', models.TextField(blank=True, null=True)),
                ('menu_price', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MenuCannotEat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cannoteat_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MenuFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MenuFirstClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_class_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MenuIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ing_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MenuType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_count', models.IntegerField(default=0)),
                ('service_content', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_id', models.CharField(blank=True, max_length=30)),
                ('res_name', models.CharField(max_length=30)),
                ('res_search_name', models.CharField(default='', max_length=30)),
                ('is_affiliate', models.BooleanField(default=False)),
                ('res_telenum', models.CharField(blank=True, max_length=30)),
                ('res_address', models.CharField(blank=True, max_length=100)),
                ('x_cor', models.CharField(blank=True, default='', max_length=30)),
                ('y_cor', models.CharField(blank=True, default='', max_length=30)),
                ('res_time', models.CharField(blank=True, max_length=100)),
                ('res_exp', models.TextField(blank=True, null=True)),
                ('res_image', models.TextField(blank=True, null=True)),
                ('res_pos_id', models.CharField(blank=True, max_length=100)),
                ('res_pos_pw', models.CharField(blank=True, max_length=100)),
                ('res_menu', models.ManyToManyField(blank=True, related_name='restaurant', to='restaurant.Menu')),
                ('res_type', models.ManyToManyField(blank=True, related_name='restaurant', to='restaurant.MenuType')),
            ],
        ),
        migrations.CreateModel(
            name='ResService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_exp', models.TextField(blank=True, null=True)),
                ('coupon_exp', models.TextField(blank=True, null=True)),
                ('stamp_max_cnt', models.IntegerField(default=10)),
                ('stamp_max_time', models.IntegerField(default=180)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to='restaurant.restaurant')),
                ('services', models.ManyToManyField(blank=True, related_name='service', to='restaurant.Service')),
            ],
        ),
        migrations.CreateModel(
            name='MenuSecondClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('second_class_name', models.CharField(max_length=30)),
                ('second_class_search_name', models.CharField(max_length=30)),
                ('menu_soup', models.IntegerField(default=0)),
                ('is_spicy', models.BooleanField(default=False)),
                ('is_cold', models.BooleanField(default=False)),
                ('is_favor', models.BooleanField(default=False)),
                ('menu_second_image', models.TextField(blank=True, null=True)),
                ('menu_cannoteat', models.ManyToManyField(blank=True, related_name='menu', to='restaurant.MenuCannotEat')),
                ('menu_feature', models.ManyToManyField(blank=True, related_name='menu', to='restaurant.MenuFeature')),
                ('menu_first_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu', to='restaurant.menufirstclass')),
                ('menu_ingredients', models.ManyToManyField(blank=True, related_name='menu', to='restaurant.MenuIngredient')),
                ('menu_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu', to='restaurant.menutype')),
            ],
        ),
        migrations.AddField(
            model_name='menu',
            name='menu_second_name',
            field=models.ManyToManyField(blank=True, related_name='menu', to='restaurant.MenuSecondClass'),
        ),
    ]
